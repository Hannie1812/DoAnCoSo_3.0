@model WebTimNguoiThatLac.ViewModels.ThongBaoViewModel

<style>
    /* Main Component Container */
    .notification-component {
        position: relative;
        display: inline-block;
    }

    /* Bell Wrapper */
    .bell-wrapper {
        position: relative;
        display: inline-block;
        cursor: pointer;
        padding: 8px;
        transition: all 0.2s ease;
    }

        .bell-wrapper:hover {
            transform: translateY(-2px);
        }

    /* Bell Icon */
    .bell-icon {
        font-size: 1.5rem;
        color: #6c757d;
        transition: color 0.2s ease;
    }

    .bell-wrapper:hover .bell-icon {
        color: #495057;
    }

    /* Notification Counter */
    .notification-count {
        position: absolute;
        top: 0px;
        right: -1px;
        background-color: #ff4757;
        color: white;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        font-size: 0.7rem;
        font-weight: bold;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 1px 3px rgba(0,0,0,0.2);
        animation: pulse 1.5s infinite;
    }

    /* Keyframes Animation */
    @@keyframes pulse {
        0% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.1);
        }

        100% {
            transform: scale(1);
        }
    }

    /* Dropdown */
    .notification-dropdown {
        position: absolute;
        right: 0;
        top: 100%;
        width: 400px;
        background: white;
        border-radius: 8px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.15);
        z-index: 1000;
        opacity: 0;
        visibility: hidden;
        transform: translateY(10px);
        transition: all 0.3s ease;
        margin-top: 10px;
    }

    .notification-component:hover .notification-dropdown {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
    }

    /* Dropdown Header */
    .dropdown-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px 16px;
        border-bottom: 1px solid #f1f1f1;
    }

        .dropdown-header h6 {
            margin: 0;
            font-size: 1rem;
            font-weight: 600;
            color: #333;
        }

    .view-all {
        font-size: 0.8rem;
        color: #0d6efd;
        text-decoration: none;
    }

        .view-all:hover {
            text-decoration: underline;
        }

    /* Notification Tabs */
    .notification-tabs {
        display: flex;
        border-bottom: 1px solid #f1f1f1;
    }

    .notification-tab {
        flex: 1;
        text-align: center;
        padding: 10px 0;
        cursor: pointer;
        font-size: 0.85rem;
        font-weight: 500;
        color: #6c757d;
        position: relative;
        transition: all 0.2s ease;
    }

        .notification-tab:hover {
            color: #495057;
            background-color: #f8f9fa;
        }

        .notification-tab.active {
            color: #0d6efd;
            font-weight: 600;
        }

            .notification-tab.active::after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 0;
                right: 0;
                height: 2px;
                background-color: #0d6efd;
            }

        .notification-tab .tab-badge {
            margin-left: 4px;
            background-color: #ff4757;
            color: white;
            border-radius: 10px;
            padding: 2px 6px;
            font-size: 0.7rem;
            font-weight: normal;
        }

    /* Notification List */
    .notification-list {
        max-height: 400px;
        overflow-y: auto;
    }

    /* Notification Items */
    .notification-item {
        display: flex;
        padding: 12px 16px;
        color: inherit;
        text-decoration: none;
        border-bottom: 1px solid #f8f9fa;
        transition: background-color 0.2s ease;
    }

        .notification-item:hover {
            background-color: #f8f9fa;
        }

    .notification-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        margin-right: 12px;
        object-fit: cover;
        background-color: #f1f1f1;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #adb5bd;
    }

    .notification-content {
        flex: 1;
    }

    .notification-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 6px;
    }

    .username {
        font-weight: 600;
        color: #333;
        font-size: 0.9rem;
    }

    .timestamp {
        font-size: 0.75rem;
        color: #6c757d;
    }

    .message {
        margin: 4px 0;
        font-size: 0.85rem;
        color: #495057;
        line-height: 1.4;
    }

    .notification-category {
        display: inline-block;
        font-size: 0.7rem;
        padding: 2px 6px;
        border-radius: 4px;
        background-color: #e9ecef;
        color: #495057;
        margin-top: 4px;
    }

    /* Category Colors */
    .category-post {
        background-color: #e3f2fd;
        color: #1976d2;
    }

    .category-user {
        background-color: #e8f5e9;
        color: #388e3c;
    }

    .category-violation {
        background-color: #ffebee;
        color: #d32f2f;
    }

    /* Empty State */
    .empty-notifications {
        text-align: center;
        padding: 24px;
        color: #6c757d;
    }

        .empty-notifications i {
            font-size: 1.8rem;
            margin-bottom: 10px;
            color: #ced4da;
        }

        .empty-notifications p {
            margin: 0;
            font-size: 0.9rem;
        }

    /* Scrollbar */
    .notification-list::-webkit-scrollbar {
        width: 6px;
    }

    .notification-list::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 3px;
    }

    .notification-list::-webkit-scrollbar-thumb {
        background: #c1c1c1;
        border-radius: 3px;
    }

    /* Accessibility */
    .sr-only {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border-width: 0;
    }
</style>

<div class="notification-component">
    <!-- Bell Icon with Counter -->
    <div class="bell-wrapper">
        <i class="fas fa-bell bell-icon"></i>
        @if (Model.AllNotifications.Any())
        {
            <span class="notification-count">
                @Model.AllNotifications.Count()
                <span class="sr-only">unread notifications</span>
            </span>
        }
    </div>

    <!-- Notification Dropdown -->
    <div class="notification-dropdown">
        <div class="dropdown-header">
            <h6>Thông báo</h6>
            @* <a href="@Url.Action("TatCaThongBao", "TimNguoi")" class="view-all">Xem tất cả</a> *@
        </div>

        <!-- Notification Tabs -->
        <div class="notification-tabs">
            <div class="notification-tab active" data-tab="all">
                Tất cả
                @if (Model.AllNotifications.Any())
                {
                    <span class="tab-badge">@Model.AllNotifications.Count()</span>
                }
            </div>
            <div class="notification-tab" data-tab="post">
                Bài viết
                @if (Model.PostMessages.Any())
                {
                    <span class="tab-badge">@Model.PostMessages.Count()</span>
                }
            </div>
            <div class="notification-tab" data-tab="user">
                Tin nhắn
                @if (Model.UserMessages.Any())
                {
                    <span class="tab-badge">@Model.UserMessages.Count()</span>
                }
            </div>
            <div class="notification-tab" data-tab="violation">
                Vi phạm
                @if (Model.Violations.Any())
                {
                    <span class="tab-badge">@Model.Violations.Count()</span>
                }
            </div>
        </div>

        <!-- Notification Lists -->
        <div class="notification-list" id="all-notifications">
            @if (Model.AllNotifications.Any())
            {
                foreach (var item in Model.AllNotifications.OrderByDescending(n => n.ThoiGian))
                {
                    <a href="@item.LinkDuongDan" class="notification-item">
                        <div class="notification-avatar">
                            @if (!string.IsNullOrEmpty(item.HinhAnh))
                            {
                                <img src="@item.HinhAnh" alt="@item.TieuDe"
                                     class="rounded-circle border"
                                     width="48" height="48"
                                     style="object-fit: cover; border: 2px solid #ddd;" />
                            }
                            else
                            {
                                <i class="fas fa-user"></i>
                            }
                        </div>
                        <div class="notification-content">
                            <div class="notification-header">
                                <span class="username">@item.TieuDe</span>
                                <span class="timestamp">@item.ThoiGian?.ToString("HH:mm dd/MM")</span>
                            </div>
                            <p class="message">@item.NoiDung</p>
                            <span class="notification-category @GetCategoryClass(item.DanhMuc))">@item.DanhMuc</span>
                        </div>
                    </a>
                }
            }
            else
            {
                <div class="empty-notifications">
                    <i class="far fa-bell-slash"></i>
                    <p>Không có thông báo mới</p>
                </div>
            }
        </div>

        <div class="notification-list" id="post-notifications" style="display: none;">
            @if (Model.PostMessages.Any())
            {
                foreach (var item in Model.PostMessages.OrderByDescending(n => n.ThoiGian))
                {
                    <a href="@item.LinkDuongDan" class="notification-item">
                        <div class="notification-avatar">
                            @if (!string.IsNullOrEmpty(item.HinhAnh))
                            {
                                <img src="@item.HinhAnh" alt="@item.TieuDe"
                                     class="rounded-circle border"
                                     width="48" height="48"
                                     style="object-fit: cover; border: 2px solid #ddd;" />
                            }
                            else
                            {
                                <i class="fas fa-user"></i>
                            }
                        </div>
                        <div class="notification-content">
                            <div class="notification-header">
                                <span class="username">@item.TieuDe</span>
                                <span class="timestamp">@item.ThoiGian?.ToString("HH:mm dd/MM")</span>
                            </div>
                            <p class="message">@item.NoiDung</p>
                            <span class="notification-category category-post">@item.DanhMuc</span>
                        </div>
                    </a>
                }
            }
            else
            {
                <div class="empty-notifications">
                    <i class="far fa-comment-alt"></i>
                    <p>Không có thông báo bài viết</p>
                </div>
            }
        </div>

        <div class="notification-list" id="user-notifications" style="display: none;">
            @if (Model.UserMessages.Any())
            {
                foreach (var item in Model.UserMessages.OrderByDescending(n => n.ThoiGian))
                {
                    <a href="@item.LinkDuongDan" class="notification-item">
                        <div class="notification-avatar">
                            @if (!string.IsNullOrEmpty(item.HinhAnh))
                            {
                                <img src="@item.HinhAnh" alt="@item.TieuDe"
                                     class="rounded-circle border"
                                     width="48" height="48"
                                     style="object-fit: cover; border: 2px solid #ddd;" />
                            }
                            else
                            {
                                <i class="fas fa-user"></i>
                            }
                        </div>
                        <div class="notification-content">
                            <div class="notification-header">
                                <span class="username">@item.TieuDe</span>
                                <span class="timestamp">@item.ThoiGian?.ToString("HH:mm dd/MM")</span>
                            </div>
                            <p class="message">@item.NoiDung</p>
                            <span class="notification-category category-user">@item.DanhMuc</span>
                        </div>
                    </a>
                }
            }
            else
            {
                <div class="empty-notifications">
                    <i class="far fa-envelope"></i>
                    <p>Không có tin nhắn mới</p>
                </div>
            }
        </div>

        <div class="notification-list" id="violation-notifications" style="display: none;">
            @if (Model.Violations.Any())
            {
                foreach (var item in Model.Violations.OrderByDescending(n => n.ThoiGian))
                {
                    <a href="@item.LinkDuongDan" class="notification-item">
                        <div class="notification-avatar">
                            <i class="fas fa-exclamation-triangle"></i>
                        </div>
                        <div class="notification-content">
                            <div class="notification-header">
                                <span class="username">@item.TieuDe</span>
                                <span class="timestamp">@item.ThoiGian?.ToString("HH:mm dd/MM")</span>
                            </div>
                            <p class="message">@item.NoiDung</p>
                            <span class="notification-category category-violation">@item.DanhMuc</span>
                        </div>
                    </a>
                }
            }
            else
            {
                <div class="empty-notifications">
                    <i class="far fa-check-circle"></i>
                    <p>Không có vi phạm</p>
                </div>
            }
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const tabs = document.querySelectorAll('.notification-tab');

        tabs.forEach(tab => {
            tab.addEventListener('click', function() {
                // Remove active class from all tabs
                tabs.forEach(t => t.classList.remove('active'));

                // Add active class to clicked tab
                this.classList.add('active');

                // Hide all notification lists
                document.querySelectorAll('.notification-list').forEach(list => {
                    list.style.display = 'none';
                });

                // Show the selected notification list
                const tabName = this.getAttribute('data-tab');
                document.getElementById(`${tabName}-notifications`).style.display = 'block';
            });
        });
    });
</script>

@functions {
    string GetCategoryClass(string danhMuc)
    {
        switch (danhMuc)
        {
            case "Tin Nhắn Bài Viết":
                return "category-post";
            case "Tin Nhắn Người Dùng":
                return "category-user";
            case "Hành Vi Đáng Ngờ":
                return "category-violation";
            default:
                return "";
        }
    }
}