// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebTimNguoiThatLac.Data;

#nullable disable

namespace WebTimNguoiThatLac.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250415065701_TheoDoiLan2")]
    partial class TheoDoiLan2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.AnhTimNguoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdNguoiCanTim")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdNguoiCanTim");

                    b.ToTable("AnhTimNguoi");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLanViPham")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.BaoCaoBaiViet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DaDoc")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LyDo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaBaiViet")
                        .HasColumnType("int");

                    b.Property<string>("MaNguoiBaoCao")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayBaoCao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("check")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MaBaiViet");

                    b.HasIndex("MaNguoiBaoCao");

                    b.ToTable("BaoCaoBaiViet");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.BaoCaoBinhLuan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DaDoc")
                        .HasColumnType("bit");

                    b.Property<string>("LyDo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaBinhLuan")
                        .HasColumnType("int");

                    b.Property<string>("MaNguoiBaoCao")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayBaoCao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("check")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MaBinhLuan");

                    b.HasIndex("MaNguoiBaoCao");

                    b.ToTable("BaoCaoBinhLuan");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.BinhLuan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("DaDoc")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdBaiViet")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBinhLuan")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IdBaiViet");

                    b.HasIndex("UserId");

                    b.ToTable("BinhLuan");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.GioiThieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GioiThieu");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.HanhViDangNgo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HanhDong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiDungId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("HanhViDangNgo");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.HopThoaiTinNhan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMessageTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TieuDeChat")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HopThoaiTinNhan");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.LichSuTimKiem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChiIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNguoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianTimKiem")
                        .HasColumnType("datetime2");

                    b.Property<string>("TuKhoa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("LichSuTimKiem");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.NguoiDungLienHe", b =>
                {
                    b.Property<int>("MaLienHeNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLienHeNguoiDung"));

                    b.Property<string>("EmailNguoiDungLienHe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayLienHe")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiBungLienHe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNguoiDungLienHe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNguoiDungLienHe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VanDeLienHe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isRead")
                        .HasColumnType("bit");

                    b.HasKey("MaLienHeNguoiDung");

                    b.ToTable("NguoiDungLienHe");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.NguoiThamGia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<int?>("MaHopThoaiTinNhan")
                        .HasColumnType("int");

                    b.Property<string>("MaNguoiThamGia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayThamGia")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaHopThoaiTinNhan");

                    b.HasIndex("MaNguoiThamGia");

                    b.ToTable("NguoiThamGia");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.TimNguoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DaciemNhanDang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonDangKiTrinhBao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNguoiDung")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KhuVuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoiQuanHe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayMatTich")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdNguoiDung");

                    b.ToTable("TimNguoi");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.TimThayNguoiThatLac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnhMinhChung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DaDuaVeGiaDinh")
                        .HasColumnType("bit");

                    b.Property<string>("DiaDiemTimThay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonXacNhanTimThay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("GioTimThay")
                        .HasColumnType("time");

                    b.Property<string>("HienDangO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HoanTatHoSoPhapLy")
                        .HasColumnType("bit");

                    b.Property<string>("IdNguoiLamDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTaChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTimThay")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiTimThay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXacNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoaiNguoiXacNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TimNguoiId")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrangSucKhoe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdNguoiLamDon");

                    b.HasIndex("TimNguoiId");

                    b.ToTable("TimThayNguoiThatLac");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.TinNhan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int?>("MaHopThoaiTinNhan")
                        .HasColumnType("int");

                    b.Property<string>("MaNguoiGui")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayGui")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaHopThoaiTinNhan");

                    b.HasIndex("MaNguoiGui");

                    b.ToTable("TinNhan");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.TinTuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTaNgan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgayDang")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TacGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TinTuc");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.TrungBayHinhAnh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrungBayHinhAnh");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebTimNguoiThatLac.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebTimNguoiThatLac.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebTimNguoiThatLac.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebTimNguoiThatLac.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.AnhTimNguoi", b =>
                {
                    b.HasOne("WebTimNguoiThatLac.Models.TimNguoi", "TimNguoi")
                        .WithMany("AnhTimNguois")
                        .HasForeignKey("IdNguoiCanTim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TimNguoi");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.BaoCaoBaiViet", b =>
                {
                    b.HasOne("WebTimNguoiThatLac.Models.TimNguoi", "TimNguoi")
                        .WithMany("BaoCaoBaiViets")
                        .HasForeignKey("MaBaiViet");

                    b.HasOne("WebTimNguoiThatLac.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("BaoCaoBaiViets")
                        .HasForeignKey("MaNguoiBaoCao");

                    b.Navigation("ApplicationUser");

                    b.Navigation("TimNguoi");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.BaoCaoBinhLuan", b =>
                {
                    b.HasOne("WebTimNguoiThatLac.Models.BinhLuan", "BinhLuan")
                        .WithMany("BaoCaoBinhLuans")
                        .HasForeignKey("MaBinhLuan");

                    b.HasOne("WebTimNguoiThatLac.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("BaoCaoBinhLuans")
                        .HasForeignKey("MaNguoiBaoCao");

                    b.Navigation("ApplicationUser");

                    b.Navigation("BinhLuan");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.BinhLuan", b =>
                {
                    b.HasOne("WebTimNguoiThatLac.Models.TimNguoi", "TimNguoi")
                        .WithMany("BinhLuans")
                        .HasForeignKey("IdBaiViet");

                    b.HasOne("WebTimNguoiThatLac.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("BinhLuans")
                        .HasForeignKey("UserId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("TimNguoi");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.HanhViDangNgo", b =>
                {
                    b.HasOne("WebTimNguoiThatLac.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("HanhViDangNgos")
                        .HasForeignKey("ApplicationUserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.LichSuTimKiem", b =>
                {
                    b.HasOne("WebTimNguoiThatLac.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("LichSuTimKiems")
                        .HasForeignKey("ApplicationUserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.NguoiThamGia", b =>
                {
                    b.HasOne("WebTimNguoiThatLac.Models.HopThoaiTinNhan", "HopThoai")
                        .WithMany("NguoiThamGias")
                        .HasForeignKey("MaHopThoaiTinNhan");

                    b.HasOne("WebTimNguoiThatLac.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("NguoiThamGias")
                        .HasForeignKey("MaNguoiThamGia");

                    b.Navigation("ApplicationUser");

                    b.Navigation("HopThoai");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.TimNguoi", b =>
                {
                    b.HasOne("WebTimNguoiThatLac.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("TimNguois")
                        .HasForeignKey("IdNguoiDung");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.TimThayNguoiThatLac", b =>
                {
                    b.HasOne("WebTimNguoiThatLac.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("IdNguoiLamDon");

                    b.HasOne("WebTimNguoiThatLac.Models.TimNguoi", "TimNguoi")
                        .WithMany("TimThayNguoiThatLacs")
                        .HasForeignKey("TimNguoiId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("TimNguoi");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.TinNhan", b =>
                {
                    b.HasOne("WebTimNguoiThatLac.Models.HopThoaiTinNhan", "HopThoaiTinNhan")
                        .WithMany("TinNhans")
                        .HasForeignKey("MaHopThoaiTinNhan");

                    b.HasOne("WebTimNguoiThatLac.Models.ApplicationUser", "NguoiGuiTinNhan")
                        .WithMany()
                        .HasForeignKey("MaNguoiGui");

                    b.Navigation("HopThoaiTinNhan");

                    b.Navigation("NguoiGuiTinNhan");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.ApplicationUser", b =>
                {
                    b.Navigation("BaoCaoBaiViets");

                    b.Navigation("BaoCaoBinhLuans");

                    b.Navigation("BinhLuans");

                    b.Navigation("HanhViDangNgos");

                    b.Navigation("LichSuTimKiems");

                    b.Navigation("NguoiThamGias");

                    b.Navigation("TimNguois");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.BinhLuan", b =>
                {
                    b.Navigation("BaoCaoBinhLuans");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.HopThoaiTinNhan", b =>
                {
                    b.Navigation("NguoiThamGias");

                    b.Navigation("TinNhans");
                });

            modelBuilder.Entity("WebTimNguoiThatLac.Models.TimNguoi", b =>
                {
                    b.Navigation("AnhTimNguois");

                    b.Navigation("BaoCaoBaiViets");

                    b.Navigation("BinhLuans");

                    b.Navigation("TimThayNguoiThatLacs");
                });
#pragma warning restore 612, 618
        }
    }
}
