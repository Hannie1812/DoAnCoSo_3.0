@page
@model RegisterModel
@{
    ViewData["Title"] = "Đăng ký tài khoản";
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}



<!-- Notification Area -->
<div id="notification-area" style="position: fixed; top: 20px; right: 20px; z-index: 9999;"></div>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">Đăng ký tài khoản</h3>
                </div>
                <div class="card-body">
                    <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                        <div class="form-floating mb-3">
                            <input asp-for="Input.Email" class="form-control" autocomplete="username" placeholder="Email" />
                            <label asp-for="Input.Email">Email</label>
                            <span asp-validation-for="Input.Email" class="text-danger"></span>
                        </div>
                        <div class="form-floating mb-3">
                            <input asp-for="Input.FullName" class="form-control" autocomplete="FullName" placeholder="Họ tên" />
                            <label asp-for="Input.FullName">Họ và tên</label>
                            <span asp-validation-for="Input.FullName" class="text-danger"></span>
                        </div>
                        <div class="form-group mb-3">
                            <label for="imageUpload"><i class="fas fa-id-card"></i> Tải ảnh CCCD</label>
                            <input type="file" id="imageUpload" class="form-control" accept="image/*">
                            <button type="button" id="extractCCCD" class="btn btn-primary mt-2">
                                <i class="fas fa-extract"></i> Trích xuất CCCD
                            </button>
                        </div>
                        <div class="form-floating mb-3">
                            <input asp-for="Input.CCCD" id="cccdInput" class="form-control" placeholder="Số CCCD" required />
                            <label asp-for="Input.CCCD">Số CCCD</label>
                            <span asp-validation-for="Input.CCCD" class="text-danger"></span>
                        </div>
                        <div class="form-floating mb-3">
                            <input asp-for="Input.Address" class="form-control" placeholder="Địa chỉ" />
                            <label asp-for="Input.Address">Địa chỉ</label>
                            <span asp-validation-for="Input.Address" class="text-danger"></span>
                        </div>
                        <div class="form-floating mb-3">
                            <input asp-for="Input.Password" class="form-control" autocomplete="new-password" placeholder="Mật khẩu" />
                            <label asp-for="Input.Password">Mật khẩu</label>
                            <span asp-validation-for="Input.Password" class="text-danger"></span>
                        </div>
                        <div class="form-floating mb-3">
                            <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" placeholder="Nhập lại mật khẩu" />
                            <label asp-for="Input.ConfirmPassword">Nhập lại mật khẩu</label>
                            <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                        </div>

                        <div class="col-md-6 mb-3 mb-md-0">
                            <label class="fw-bold mb-1"><i class="fas fa-id-card"></i> Ảnh CCCD</label>
                            <input type="file" id="cccdImage" class="form-control mb-2" accept="image/*"
                                   onchange="analyzeAndDrawFace('cccdImage', 'cccdCanvasImg', 'cccdCanvas')">
                            <div class="position-relative d-inline-block text-center">
                                <img id="cccdCanvasImg" src="#" alt="Ảnh CCCD" class="img-thumbnail d-none" style="max-width: 220px;">
                                <canvas id="cccdCanvas" class="position-absolute top-0 start-0"></canvas>
                            </div>
                        </div>
                        <div class="form-group mb-3">
                            <label class="fw-bold mb-1"><i class="fas fa-camera"></i> Ảnh chụp khuôn mặt</label>
                            <div class="text-center mt-2">

                                <video id="video" width="220" height="165" autoplay class="border rounded"></video>
                                <div class="mt-2">
                                    <button type="button" id="snap" class="btn btn-secondary">
                                        <i class="fas fa-camera"></i> Chụp ảnh
                                    </button>
                                </div>
                                <canvas id="canvas" width="220" height="165" style="display: none;"></canvas>
                                <input type="hidden" asp-for="Input.CapturedImageBase64" id="CapturedImageBase64" />
                                <div class="mt-2 position-relative d-block" style="width:100%;">
                                    <img id="preview" src="#" class="border rounded" style="display:none;width:100%;max-width:100%;min-width:220px;" />
                                    <canvas id="previewCanvas" width="640" height="480" style="display:none;position:absolute;top:0;left:0;width:100%;max-width:100%;min-width:220px;"></canvas>
                                </div>
                            </div>
                        </div>

                        
                        <div class="row mb-3">
                            <div class="col text-center">
                                <button type="button" class="btn btn-outline-primary px-4" onclick="startCCCDVerification()">
                                    <i class="fas fa-check-circle"></i> Xác thực CCCD bằng khuôn mặt
                                </button>
                                <div id="cccdVerifyProgress" class="text-info mt-2"></div>
                                <div id="cccdVerifyResult" class="mt-2"></div>
                            </div>
                        </div>
                        <div class="form-floating mb-3">
                            <select asp-for="Input.Role" asp-items="@Model.Input.RoleList" class="form-control">
                                <option disabled selected> --- Hãy Chọn Role ---</option>
                            </select>
                        </div>
                        <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary" disabled>Đăng ký</button>
                        @* <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary" >Đăng ký</button> *@
                    </form>
                </div>
            </div>
        </div>
        @* <div class="col-lg-8 mt-4">
            <section>
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h3 class="mb-0">Đăng ký bằng dịch vụ khác</h3>
                    </div>
                    <div class="card-body">
                        @{
                            if ((Model.ExternalLogins?.Count ?? 0) == 0)
                            {
                                <div>
                                    <p>
                                        There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                                            about setting up this ASP.NET application to support logging in via external services</a>.
                                    </p>
                                </div>
                            }
                            else
                            {
                                <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                                    <div class="d-grid gap-3">
                                        @foreach (var provider in Model.ExternalLogins)
                                        {
                                            var btnClass = provider.Name switch
                                            {
                                                "Google" => "btn-danger",
                                                "Facebook" => "btn-facebook",
                                                _ => "btn-secondary"
                                            };


                                            <button type="submit" class="btn @btnClass w-100 py-2" name="provider" value="@provider.Name" title="Đăng nhập bằng @provider.DisplayName">
                                                @if (provider.Name == "Google")
                                                {
                                                    <i class="fab fa-google me-2"></i>
                                                }
                                                else if (provider.Name == "Facebook")
                                                {
                                                    <i class="fab fa-facebook-f me-2"></i>
                                                }
                                                Đăng nhập bằng @provider.DisplayName
                                            </button>
                                        }
                                    </div>
                                </form>
                            }
                        }
                    </div>
                </div>
            </section>
        </div> *@
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/face-api.js@0.22.2/dist/face-api.min.js"></script>
    <script src="~/js/faceRecognition.js"></script>

    <script>

        // Bật webcam
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const preview = document.getElementById('preview');
        const capturedInput = document.getElementById('CapturedImageBase64');
        const snapBtn = document.getElementById('snap');

        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            navigator.mediaDevices.getUserMedia({ video: true })
                .then(function (stream) {
                    video.srcObject = stream;
                    video.play();
                });
        }

        snapBtn.addEventListener('click', function () {
            canvas.style.display = 'block';
            canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);
            const dataUrl = canvas.toDataURL('image/png');
            preview.src = dataUrl;
            preview.style.display = 'block';
            capturedInput.value = dataUrl;

                // Vẽ khung mặt lên canvas preview
        const previewCanvas = document.getElementById('previewCanvas');
        previewCanvas.style.display = 'block';
        const img = new Image();
        img.src = dataUrl;
        img.onload = async function () {
            previewCanvas.width = img.width;
            previewCanvas.height = img.height;
            const ctx = previewCanvas.getContext('2d');
            ctx.clearRect(0, 0, previewCanvas.width, previewCanvas.height);

            if (window.faceapi) {
                const options = new faceapi.TinyFaceDetectorOptions({ inputSize: 320, scoreThreshold: 0.5 });
                const detections = await faceapi
                    .detectAllFaces(img, options)
                    .withFaceLandmarks()
                    .withFaceDescriptors();
                if (detections.length > 0) {
                    const displaySize = { width: img.width, height: img.height };
                    faceapi.matchDimensions(previewCanvas, displaySize);
                    const resized = faceapi.resizeResults(detections, displaySize);
                    faceapi.draw.drawDetections(previewCanvas, resized);
                    faceapi.draw.drawFaceLandmarks(previewCanvas, resized);
                }
            }
        };
            
        });
        document.getElementById('registerForm').addEventListener('submit', function (e) {
            if (!isCCCDVerified) {
                e.preventDefault();
                // alert('Bạn cần xác thực CCCD thành công trước khi đăng ký!');
                    showNotification('warning', "'Bạn cần xác thực CCCD thành công trước khi đăng ký! ");
            }
        });
        $(document).ready(function () {
            $("#extractCCCD").click(function () {
                var fileInput = $("#imageUpload")[0].files[0];

                if (!fileInput) {
                    // alert("Vui lòng chọn một ảnh CCCD.");
                    showNotification('info', 'Vui lòng chọn một ảnh CCCD.');
                    return;
                }

                var formData = new FormData();
                formData.append("imageFile", fileInput);

                $.ajax({
                    url: "/OCR/ExtractCCCD",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        $("#cccdInput").val(response.cccd);
                        $("#fullNameInput").val(response.hoTen);
                        // alert("Trích xuất thành công!");
                         showNotification('success', 'Trích xuất thành công!');
                    },
                    error: function (xhr) {
                        // alert("Lỗi OCR: " + xhr.responseText);
                        showNotification('warning', "Lỗi OCR: " + xhr.responseText);
                    }
                });
            });
        });
    </script>
}
<style>
    .img-thumbnail, .border.rounded {
        border: 2px solid #0d6efd;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        margin-bottom: 8px;
        background: #fff;
    }

    .position-relative {
        display: inline-block;
    }

    canvas {
        pointer-events: none;
    }

    #cccdVerifyResult .alert-success, #cccdVerifyResult .alert-danger {
        font-size: 1.1rem;
        margin-top: 8px;
    }

    .btn-facebook {
        background-color: #1877F2;
        color: white;
        border: none;
    }

        .btn-facebook:hover {
            background-color: #145DBF;
            color: white;
        }

    #cccdImage.form-control, #preview, #cccdCanvasImg, #previewCanvas, #cccdCanvas {
        width: 100% !important;
        max-width: 100% !important;
        min-width: 220px;
        height: auto !important;
        display: block;
        margin-left: 0;
    }

    .position-relative, .d-block {
        width: 100%;
    }
    
</style>
