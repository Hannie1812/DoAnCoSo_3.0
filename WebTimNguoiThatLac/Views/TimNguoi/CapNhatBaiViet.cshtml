
@using Microsoft.AspNetCore.Identity
@using WebTimNguoiThatLac.Data
@model WebTimNguoiThatLac.Models.TimNguoi
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Cập Nhật Bài Viết";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card shadow-lg">
                <div class="card-header bg-primary text-white">
                    <h2 class="card-title mb-0"><i class="fas fa-edit mr-2"></i>@ViewData["Title"]</h2>
                </div>
                <div class="card-body p-4">
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show">
                            @TempData["ErrorMessage"]
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    }

                    <form asp-action="CapNhatBaiViet" asp-controller="TimNguoi" enctype="multipart/form-data" method="post" class="needs-validation" novalidate>
                        <div asp-validation-summary="All" class="text-danger"></div>
                        <input type="hidden" asp-for="IdNguoiDung" />
                        <input type="hidden" asp-for="Id" />
                        <input type="hidden" id="faceDescriptorsJson" name="faceDescriptorsJson" value="">
                        <input type="hidden" asp-for="AverageDescriptorBytes"/>
                        <div class="row">
                            <!-- Thông tin cơ bản -->
                            <div class="col-md-6">
                                <h4 class="mb-3 text-primary"><i class="fas fa-info-circle mr-2"></i>Thông tin cơ bản</h4>

                                <div class="form-group">
                                    <label asp-for="HoTen" class="font-weight-bold">Họ và Tên</label>
                                    <input asp-for="HoTen" class="form-control" placeholder="Nhập họ và tên" required />
                                    <span asp-validation-for="HoTen" class="text-danger small"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="TieuDe" class="font-weight-bold">Tiêu đề tin</label>
                                    <input asp-for="TieuDe" class="form-control" placeholder="Nhập tiêu đề tin" required />
                                    <span asp-validation-for="TieuDe" class="text-danger small"></span>
                                </div>

                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label asp-for="NgaySinh" class="font-weight-bold">Ngày sinh</label>
                                        <input asp-for="NgaySinh" type="date" class="form-control" required />
                                        <span asp-validation-for="NgaySinh" class="text-danger small"></span>
                                    </div>

                                    <div class="form-group col-md-6">
                                        <label asp-for="NgayMatTich" class="font-weight-bold">Ngày mất tích</label>
                                        <input asp-for="NgayMatTich" type="date" class="form-control" required />
                                        <span asp-validation-for="NgayMatTich" class="text-danger small"></span>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label asp-for="MoiQuanHe" class="font-weight-bold">Mối quan hệ</label>
                                    <input asp-for="MoiQuanHe" class="form-control" placeholder="Mối quan hệ của bạn với người mất tích" required />
                                    <span asp-validation-for="MoiQuanHe" class="text-danger small"></span>
                                </div>
                            </div>

                            <!-- Thông tin bổ sung -->
                            <div class="col-md-6">
                                <h4 class="mb-3 text-primary"><i class="fas fa-info-circle mr-2"></i>Thông tin bổ sung</h4>
                                @* dặc đeir nhận dạng *@
                                <div class="form-group">
                                    <label asp-for="DaciemNhanDang" class="font-weight-bold">Đặc điểm nhận dạng</label>

                                    <!-- Phần nhập đặc điểm mới -->
                                    <div class="input-group mb-3">
                                        <input type="text" id="newFeatureInput" class="form-control" placeholder="Nhập đặc điểm (ví dụ: Xẹo má trái, sẹo môi...)">
                                        <div class="input-group-append">
                                            <button class="btn btn-outline-primary" type="button" id="addFeatureBtn">Thêm</button>
                                        </div>
                                    </div>

                                    <!-- Hiển thị các đặc điểm đã thêm -->
                                    <div id="featureTags" class="d-flex flex-wrap mb-3">
                                        @if (!string.IsNullOrEmpty(Model.DaciemNhanDang))
                                        {
                                            var features = Model.DaciemNhanDang.Split(',');
                                            foreach (var feature in features)
                                            {
                                                var trimmedFeature = feature.Trim();
                                                if (!string.IsNullOrEmpty(trimmedFeature))
                                                {
                                                    <div class="feature-tag badge badge-pill badge-primary mr-2 mb-2" data-id="feature_@Guid.NewGuid()">
                                                        @trimmedFeature
                                                        <button type="button" class="close ml-2" onclick="removeTag(this)">
                                                            <span>&times;</span>
                                                        </button>
                                                    </div>
                                                }
                                            }
                                        }
                                    </div>

                                    <!-- Textarea ẩn chứa dữ liệu cuối cùng -->
                                    <textarea asp-for="DaciemNhanDang" id="featuresData" class="form-control" style="display:none;"></textarea>
                                </div>
                                @* end dặc đeir nhận dạng *@
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label asp-for="TrangThai" class="font-weight-bold">Trạng thái</label>
                                        <select asp-for="TrangThai" class="form-control" required>
                                            @* <option value="Đã Tìm Thấy">Đã Tìm Thấy</option> *@
                                            <option value="Đang Tìm Kiếm">Đang Tìm Kiếm</option>
                                            <option value="Cần hỗ trợ từ cộng đồng">Cần hỗ trợ từ cộng đồng</option>
                                        </select>
                                        <span asp-validation-for="TrangThai" class="text-danger small"></span>
                                    </div>

                                    <div class="form-group col-md-6">
                                        <label asp-for="GioiTinh" class="font-weight-bold">Giới tính</label>
                                        <select asp-for="GioiTinh" class="form-control" required>
                                            <option value="1">Nam</option>
                                            <option value="2">Nữ</option>
                                        </select>
                                        <span asp-validation-for="GioiTinh" class="text-danger small"></span>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="font-weight-bold">Tỉnh Thành</label>
                                    <select id="TinhThanh" name="IdTinhThanh" class="form-control" onchange="loadQuanHuyen(this.value)">
                                        <option value="">-- Chọn tỉnh/thành phố --</option>
                                        @foreach (var tinh in ViewBag.DanhSachTinhThanh as List<TinhThanh> ?? new List<TinhThanh>())
                                        {
                                            <option value="@tinh.Id">@tinh.TenTinhThanh</option>
                                        }
                                    </select>
                                </div>

                                <div class="form-group">
                                    <label class="font-weight-bold">Quận Huyện</label>
                                    <select id="QuanHuyen" name="IdQuanHuyen" class="form-control">
                                        <option value="">-- Chọn quận/huyện --</option>
                                    </select>
                                </div>

                                <div class="form-group">
                                    <label asp-for="KhuVuc" class="font-weight-bold">Địa chỉ Cụ Thể</label>
                                    <input asp-for="KhuVuc" class="form-control" placeholder="Nhập địa chỉ cụ thể (nếu có)" />
                                    <span asp-validation-for="KhuVuc" class="text-danger small"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Mô tả -->
                        <div class="form-group mt-4">
                            <label asp-for="MoTa" class="font-weight-bold">Nội dung chi tiết</label>
                            <textarea asp-for="MoTa" id="compose-textarea" class="form-control" rows="5" placeholder="Nhập nội dung chi tiết..." required></textarea>
                            <span asp-validation-for="MoTa" class="text-danger small"></span>
                        </div>

                        <!-- Hình ảnh -->
                        <div class="row mt-4">
                            <div class="col-md-6">
                                <div class="card">
                                    <div class="card-header bg-light">
                                        <h5 class="mb-0"><i class="fas fa-images mr-2"></i>Hình ảnh hiện tại</h5>
                                    </div>
                                    <div class="card-body">
                                        @if (ViewBag.DanhSachHinhAnh != null && ViewBag.DanhSachHinhAnh.Count > 0)
                                        {
                                            <div class="d-flex flex-wrap">
                                                @foreach (WebTimNguoiThatLac.Models.AnhTimNguoi i in ViewBag.DanhSachHinhAnh)
                                                {
                                                    <div class="position-relative m-2">
                                                        <img src="@i.HinhAnh" class="img-thumbnail" width="120" alt="Hình ảnh hiện tại" />
                                                        @if (i.TrangThai == 1)
                                                        {
                                                            <span class="badge badge-success position-absolute" style="top: 5px; right: 5px;">Ảnh chính</span>
                                                        }
                                                    </div>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <p class="text-muted">Chưa có hình ảnh nào</p>
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <!-- Image Upload Section -->
                                <div class="form-section mb-4">
                                    <h4 class="section-title mb-3 text-primary">
                                        <i class="fas fa-images mr-2"></i>Hình ảnh
                                    </h4>

                                    <div class="form-group">
                                        <label class="font-weight-bold">Tải lên hình ảnh</label>
                                        <div class="custom-file">
                                            <input type="file" multiple name="DSHinhAnhCapNhat" id="AnhVuaTai"
                                                   class="custom-file-input" accept="image/*" >
                                            <label class="custom-file-label" for="AnhVuaTai">Chọn hình ảnh...</label>
                                        </div>
                                        <small class="form-text text-muted">Có thể chọn nhiều ảnh cùng lúc (tối đa 5 ảnh)</small>
                                        <div id="faceDetectionStatus" class="my-3"></div>
                                        <div class="ChuaAnh mt-3 d-flex flex-wrap"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Nút submit -->
                        <div class="form-group mt-4 text-right">
                            <!-- Nút Cập nhật -->
                            <button type="submit" class="btn btn-primary px-4" id="submitBtn">
                                <i class="fas fa-save mr-2"></i>Cập nhật
                            </button>
                            <a asp-action="BaiVietCuaToi" asp-controller="NguoiDung" class="btn btn-outline-secondary px-4">
                                <i class="fas fa-times mr-2"></i>Hủy bỏ
                            </a>

                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <style>
        .card {
            border-radius: 10px;
            overflow: hidden;
        }

        .card-header {
            border-bottom: none;
        }

        .img-thumbnail {
            transition: all 0.3s ease;
        }

            .img-thumbnail:hover {
                transform: scale(1.05);
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }

        #previewContainer img {
            max-width: 120px;
            max-height: 120px;
            margin: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .custom-file-label::after {
            content: "Duyệt";
        }
    </style>

    @* so sánh với dữ liệu  *@
    <style>
        .feature-tag {
            font-size: 0.9rem;
            padding: 0.5em 0.8em;
            display: inline-flex;
            align-items: center;
        }

            .feature-tag .close {
                font-size: 1rem;
                line-height: 1;
            }

        #newFeatureInput {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }

        #addFeatureBtn {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    </style>
    <style>
        .face-detection-box {
            position: absolute;
            border: 2px solid #00ff00;
            background-color: rgba(0, 255, 0, 0.1);
        }

        #faceDetectionStatus {
            min-height: 20px;
        }
    </style>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <!-- Summernote -->
    <script src="~/clients/plugins/summernote/summernote-bs4.min.js"></script>

    <!-- Bootstrap File Input -->
    <script src="https://cdn.jsdelivr.net/npm/bs-custom-file-input/dist/bs-custom-file-input.min.js"></script>

    @* so sánh với cơ sửo dl *@
    <script>
        $(document).ready(function() {
            // Khởi tạo các đặc điểm từ model nếu có
            updateFeaturesData();

            // Thêm đặc điểm mới
            $('#addFeatureBtn').click(function() {
                addFeature();
            });

            // Cho phép nhấn Enter để thêm
            $('#newFeatureInput').keypress(function(e) {
                if (e.which === 13) {
                    addFeature();
                    return false;
                }
            });

            function addFeature() {
                const featureText = $('#newFeatureInput').val().trim();
                if (featureText) {
                    // Tạo tag mới
                    const tagId = 'feature_' + Date.now();
                    const tagHtml = `
                        <div class="feature-tag badge badge-pill badge-primary mr-2 mb-2" data-id="${tagId}">
                            ${featureText}
                            <button type="button" class="close ml-2" onclick="removeTag(this)">
                                <span>&times;</span>
                            </button>
                        </div>`;

                    $('#featureTags').append(tagHtml);
                    $('#newFeatureInput').val('');

                    // Cập nhật textarea ẩn
                    updateFeaturesData();
                }
            }

            window.removeTag = function(button) {
                $(button).parent().remove();
                updateFeaturesData();
            };

            function updateFeaturesData() {
                const features = [];
                $('.feature-tag').each(function() {
                    features.push($(this).clone().children().remove().end().text().trim());
                });
                $('#featuresData').val(features.join(', '));
            }
        });
    </script>
    @* end so sánh với cơ sửo dl *@
    <script>
        window.loadQuanHuyen = function(tinhThanhId) {
            const quanHuyenSelect = document.getElementById('QuanHuyen');
            quanHuyenSelect.innerHTML = '<option value="">-- Chọn quận/huyện --</option>';

            if (!tinhThanhId) return;

            fetch(`/Home/GetQuanHuyenByTinhThanh?tinhThanhId=${tinhThanhId}`)
                .then(response => response.json())
                .then(data => {
                    data.forEach(item => {
                        const option = new Option(item.tenQuanHuyen, item.id);
                        quanHuyenSelect.add(option);
                    });
                })
                .catch(error => console.error('Error:', error));
        }
        $(function () {
            // Khởi tạo Summernote
            $('#compose-textarea').summernote({
                
            });

            // Khởi tạo custom file input
            bsCustomFileInput.init();

            // Xử lý preview ảnh
            $('#AnhVuaTai').change(function(e) {
                const files = e.target.files;
                const previewContainer = $('#previewContainer');
                previewContainer.empty();


                for (let i = 0; i < files.length; i++) {
                    const file = files[i];

                    // Kiểm tra kích thước file (tối đa 5MB)
                    if (file.size > 5 * 1024 * 1024) {
                        alert(`File ${file.name} vượt quá kích thước cho phép (5MB)!`);
                        $(this).val('');
                        previewContainer.empty();
                        return;
                    }

                    // Kiểm tra loại file
                    if (!file.type.match('image.*')) {
                        alert(`File ${file.name} không phải là hình ảnh!`);
                        $(this).val('');
                        previewContainer.empty();
                        return;
                    }

                    const reader = new FileReader();
                    reader.onload = function(e) {
                        previewContainer.append(
                            `<div class="position-relative">
                                <img src="${e.target.result}" class="img-thumbnail" alt="Preview ${i+1}" />
                                <span class="badge badge-primary position-absolute" style="top: 5px; right: 5px;">${i+1}</span>
                            </div>`
                        );
                    }
                    reader.readAsDataURL(file);
                }

                // Cập nhật label
                const label = $(this).next('.custom-file-label');
                if (files.length > 1) {
                    label.text(`${files.length} files selected`);
                } else if (files.length === 1) {
                    label.text(files[0].name);
                }
            });

            // Thêm validation cho form
            (function() {
                'use strict';
                window.addEventListener('load', function() {
                    var forms = document.getElementsByClassName('needs-validation');
                    var validation = Array.prototype.filter.call(forms, function(form) {
                        form.addEventListener('submit', function(event) {
                            if (form.checkValidity() === false) {
                                event.preventDefault();
                                event.stopPropagation();
                            }
                            form.classList.add('was-validated');
                        }, false);
                    });
                }, false);
            })();
        });
    </script>
    @* nhận diện  *@
    <!-- Thêm face-api.js -->
    <!-- Face API JS -->
    <script src="https://cdn.jsdelivr.net/npm/face-api.js@0.22.2/dist/face-api.min.js"></script>

    <script>
        // Cấu hình
        const MODEL_URL = 'https://cdn.jsdelivr.net/gh/justadudewhohacks/face-api.js@master/weights';
        const MAX_IMAGES = 5;
        let isModelsLoaded = false;

        // Hàm hiển thị trạng thái
        function showStatus(message, type = 'info') {
            const statusEl = $('#faceDetectionStatus');
            const icons = {
                'info': 'fa-spinner fa-spin',
                'success': 'fa-check-circle',
                'error': 'fa-exclamation-triangle',
                'warning': 'fa-exclamation-circle'
            };

            statusEl.html(`
                <div class="alert alert-${type}">
                    <i class="fas ${icons[type]} mr-2"></i>
                    ${message}
                    ${type === 'error' ? '<button onclick="location.reload()" class="btn btn-sm btn-warning ml-2"><i class="fas fa-sync-alt mr-1"></i>Tải lại</button>' : ''}
                </div>
            `);
        }

        // Hàm tải models
        async function loadModels() {
            showStatus('Đang tải mô hình nhận diện...');

            try {
                await Promise.all([
                    faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),
                    faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),
                    faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)
                ]);

                isModelsLoaded = true;
                showStatus('Mô hình nhận diện đã sẵn sàng', 'success');
                return true;
            } catch (error) {
                console.error('Lỗi tải models:', error);
                isModelsLoaded = false;
                showStatus('Không thể tải mô hình nhận diện', 'error');
                $('#submitBtn').prop('disabled', true);
                return false;
            }
        }

        // Hàm xử lý ảnh
        async function processImages(files) {
            if (!isModelsLoaded) {
                showStatus('Mô hình chưa sẵn sàng', 'error');
                return null;
            }

            showStatus('Đang phân tích ảnh...');
            $('.ChuaAnh').empty();

            const validFiles = Array.from(files)
                .slice(0, MAX_IMAGES)
                .filter(file => file.type.startsWith('image/'));

            if (validFiles.length === 0) {
                showStatus('Không có ảnh hợp lệ', 'warning');
                return null;
            }

            const descriptors = [];
            let processedCount = 0;

            for (const file of validFiles) {
                try {
                    const img = await createImageElement(file);
                    const detections = await faceapi.detectAllFaces(img, new faceapi.TinyFaceDetectorOptions())
                        .withFaceLandmarks()
                        .withFaceDescriptors();

                    if (detections.length > 0) {
                        const descriptor = Array.from(detections[0].descriptor);
                        descriptors.push(descriptor);
                        displayImagePreview(img, file.name, detections);
                        processedCount++;
                    } else {
                        console.warn(`Không phát hiện khuôn mặt trong ảnh: ${file.name}`);
                    }
                } catch (error) {
                    console.error(`Lỗi xử lý ảnh ${file.name}:`, error);
                }
            }

            if (descriptors.length === 0) {
                showStatus('Không phát hiện khuôn mặt nào', 'warning');
                return null;
            }

            const avgDescriptor = calculateAverageDescriptor(descriptors);
            showStatus(`Đã xử lý ${processedCount}/${validFiles.length} ảnh`, 'success');

            return {
                descriptors: descriptors,
                averageDescriptor: avgDescriptor
            };
        }

        // Các hàm hỗ trợ
        function createImageElement(file) {
            return new Promise((resolve) => {
                const img = new Image();
                img.src = URL.createObjectURL(file);
                img.onload = () => resolve(img);
                img.onerror = () => reject(new Error('Lỗi tải ảnh'));
            });
        }

        function displayImagePreview(img, filename, detections) {
            const canvas = faceapi.createCanvasFromMedia(img);
            const displaySize = { width: img.width, height: img.height };
            faceapi.matchDimensions(canvas, displaySize);

            const resizedDetections = faceapi.resizeResults(detections, displaySize);
            faceapi.draw.drawDetections(canvas, resizedDetections);
            faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);

            const preview = $(`
                <div class="image-preview-container position-relative mr-2 mb-2">
                    <canvas class="img-thumbnail" style="width:150px;height:150px;object-fit:cover;"></canvas>
                    <span class="badge badge-success position-absolute" style="top:5px;right:5px;">
                        <i class="fas fa-check"></i>
                    </span>
                </div>
            `);

            const previewCanvas = preview.find('canvas')[0];
            previewCanvas.getContext('2d').drawImage(canvas, 0, 0, 150, 150);
            $('.ChuaAnh').append(preview);
        }

        function calculateAverageDescriptor(descriptors) {
            const length = descriptors[0].length;
            const average = new Array(length).fill(0);

            descriptors.forEach(desc => {
                for (let i = 0; i < length; i++) {
                    average[i] += desc[i];
                }
            });

            for (let i = 0; i < length; i++) {
                average[i] /= descriptors.length;
            }

            return average;
        }

        // Khởi tạo
        $(document).ready(async function() {
            // Kiểm tra face-api.js đã tải
            if (typeof faceapi === 'undefined') {
                showStatus('Lỗi: Thư viện nhận diện không khả dụng', 'error');
                return;
            }

            // Tải models
            await loadModels();

            // Xử lý khi chọn ảnh
            $('#AnhVuaTai').change(async function(e) {
                if (!isModelsLoaded) return;

                const files = e.target.files;
                if (!files || files.length === 0) return;

                const result = await processImages(files);
                if (result) {
                    $('#faceDescriptorsJson').val(JSON.stringify(result));
                } else {
                    $('#faceDescriptorsJson').val('');
                }
            });

            // Xử lý submit form
            $('#timNguoiForm').submit(function(e) {
                if (!isModelsLoaded) {
                    e.preventDefault();
                    showStatus('Hệ thống nhận diện chưa sẵn sàng', 'error');
                    return false;
                }

                if (!$('#faceDescriptorsJson').val()) {
                    if (!confirm('Không phát hiện khuôn mặt nào. Bạn có muốn tiếp tục không?')) {
                        e.preventDefault();
                        return false;
                    }
                }
                return true;
            });
        });
    </script>
}