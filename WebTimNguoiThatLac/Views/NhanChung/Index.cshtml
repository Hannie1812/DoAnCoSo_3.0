@model IPagedList<WebTimNguoiThatLac.Models.NhanChung>
@using Humanizer
@using X.PagedList
@using X.PagedList.Mvc.Core
@inject UserManager<ApplicationUser> _userManager

@{
    ViewData["Title"] = "Danh Sách Nhân Chứng";
    int stt = (Model.PageNumber - 1) * Model.PageSize + 1;
    int timNguoiId = ViewBag.TimNguoiId ?? 0;
    var currentUser = await _userManager.GetUserAsync(User);
}


<div id="notification-area" style="position: fixed; top: 20px; right: 20px; z-index: 9999;"></div>
<!-- Thêm vào phần đầu trang -->

<style>
    .notification {
        padding: 15px 20px;
        margin-bottom: 10px;
        border-radius: 5px;
        color: white;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        animation: slideIn 0.3s, fadeOut 0.5s 4.5s;
        transition: all 0.3s;
    }

        .notification.success {
            background-color: #28a745;
        }

        .notification.error {
            background-color: #dc3545;
        }

        .notification.warning {
            background-color: #ffc107;
            color: #212529;
        }

        .notification.info {
            background-color: #17a2b8;
        }

    @@keyframes slideIn {
        from {
            transform: translateX(100%);
        }

        to {
            transform: translateX(0);
        }
    }

    @@keyframes fadeOut {
        from {
            opacity: 1;
        }

        to {
            opacity: 0;
        }
    }
</style>

<div class="container-fluid my-2">
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <!-- Header thẻ card -->
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center py-3">
                    <div>
                        <h4 class="mb-0">
                            <i class="fas fa-user-friends mr-2"></i>@ViewData["Title"]
                        </h4>
                        <small class="text-white-50">Tổng cộng: @Model.TotalItemCount nhân chứng</small>
                    </div>
                    <div>
                        <a href="@Url.Action("ChiTietBaiTimNguoi", "TimNguoi", new { id = timNguoiId })" class="btn btn-light btn-sm">
                            <i class="fas fa-arrow-left mr-1"></i> Quay lại
                        </a>
                       
                    </div>
                </div>

                <!-- Nội dung thẻ card -->
                <div class="card-body">
                    <!-- Thanh tìm kiếm -->
                    <div class="search-box mb-4 p-3 bg-light rounded">
                        <form method="get" action="@Url.Action("Index")" class="row g-2">
                            <input type="hidden" name="id" value="@timNguoiId" />

                            <div class="col-md-4">
                                <div class="input-group">
                                    <span class="input-group-text bg-white"><i class="fas fa-user text-primary"></i></span>
                                    <input type="text" name="searchHoTen" class="form-control"
                                           placeholder="Tìm theo tên..." value="@Context.Request.Query["searchHoTen"]">
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="input-group">
                                    <span class="input-group-text bg-white"><i class="fas fa-envelope text-primary"></i></span>
                                    <input type="text" name="searchEmail" class="form-control"
                                           placeholder="Tìm theo email..." value="@Context.Request.Query["searchEmail"]">
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="input-group">
                                    <span class="input-group-text bg-white"><i class="fas fa-phone text-primary"></i></span>
                                    <input type="text" name="searchPhone" class="form-control"
                                           placeholder="Tìm theo điện thoại..." value="@Context.Request.Query["searchPhone"]">
                                </div>
                            </div>

                            <div class="col-md-12 mt-2 d-flex">
                                <button type="submit" class="btn btn-primary mr-2">
                                    <i class="fas fa-search mr-1"></i> Tìm kiếm
                                </button>
                                <a href="@Url.Action("Index", new { id = timNguoiId })" class="btn btn-outline-secondary">
                                    <i class="fas fa-sync-alt mr-1"></i> Làm mới
                                </a>
                            </div>
                        </form>
                    </div>

                    <!-- Bảng danh sách -->
                    @if (Model != null && Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover table-bordered mb-4">
                                <thead class="thead-light">
                                    <tr>
                                        <th width="50" class="text-center">STT</th>
                                        <th>Nhân chứng</th>
                                        <th>Thông tin liên hệ</th>
                                        <th>Thời gian/Địa điểm</th>
                                        <th width="120" class="text-center">Hình ảnh</th>
                                        <th width="150">Ngày báo tin</th>
                                        <th width="130" class="text-center">Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr class="align-middle">
                                            <td class="text-center">@(stt++)</td>

                                            <td>
                                                <div class="fw-bold">@(item.HoTen ?? "Không rõ")</div>
                                                <small class="text-muted" data-bs-toggle="tooltip" title="@item.MoTaManhMoi">
                                                    @item.MoTaManhMoi?.Truncate(50)
                                                </small>
                                            </td>

                                            <td>
                                                @if (!string.IsNullOrEmpty(item.Email))
                                                {
                                                    <div><i class="fas fa-envelope text-primary mr-2"></i> @item.Email</div>
                                                }
                                                @if (!string.IsNullOrEmpty(item.SoDienThoai))
                                                {
                                                    <div><i class="fas fa-phone text-success mr-2"></i> @item.SoDienThoai</div>
                                                }
                                                @if (string.IsNullOrEmpty(item.Email) && string.IsNullOrEmpty(item.SoDienThoai))
                                                {
                                                    <span class="text-muted">Không có thông tin</span>
                                                }
                                            </td>

                                            <td>
                                                <div>
                                                    <i class="fas fa-clock text-info mr-2"></i>
                                                    @(item.ThoiGian?.ToString("dd/MM/yyyy HH:mm") ?? "Không rõ")
                                                </div>
                                                <div>
                                                    <i class="fas fa-map-marker-alt text-danger mr-2"></i>
                                                    @(item.DiaDiem ?? "Không rõ")
                                                </div>
                                            </td>

                                            <td class="text-center">
                                                @if (!string.IsNullOrEmpty(item.FileDinhKem))
                                                {
                                                    <img src="@item.FileDinhKem" class="img-thumbnail file-preview"
                                                         data-bs-toggle="modal" data-bs-target="#previewModal"
                                                         data-src="@item.FileDinhKem"
                                                         onerror="this.onerror=null;this.src='/images/no-image.png';">
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">Không có</span>
                                                }
                                            </td>

                                            <td>
                                                <span class="badge bg-light text-dark">
                                                    @item.NgayBaoTin.ToString("dd/MM/yyyy HH:mm")
                                                </span>
                                            </td>

                                            <td class="text-center">
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a asp-action="Detail" asp-route-id="@item.Id"
                                                       class="btn btn-outline-primary" title="Xem chi tiết">
                                                        <i class="fas fa-eye"></i>
                                                    </a>

                                                    @if (currentUser.Id == item.TimNguoi.IdNguoiDung || User.IsInRole("Admin"))
                                                    {
                                                        <button class="btn btn-outline-danger delete-btn"
                                                                data-id="@item.Id" title="Xóa nhân chứng">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Phân trang -->
                        <div class="row">
                            <div class="col-12">
                                @Html.PagedListPager(Model, page => Url.Action("Index", new
                                    {
                                        page = page,
                                        id = timNguoiId,
                                        searchHoTen = Context.Request.Query["searchHoTen"],
                                        searchEmail = Context.Request.Query["searchEmail"],
                                        searchPhone = Context.Request.Query["searchPhone"]
                                    }),
                                         new PagedListRenderOptions
                            {
                                LiElementClasses = new[] { "page-item" },
                                PageClasses = new[] { "page-link" },
                                UlElementClasses = new[] { "pagination justify-content-center" },
                                DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                                DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                                LinkToFirstPageFormat = "« Đầu",
                                LinkToPreviousPageFormat = "‹ Trước",
                                LinkToNextPageFormat = "Sau ›",
                                LinkToLastPageFormat = "Cuối »",
                                MaximumPageNumbersToDisplay = 5
                            })
                            </div>
                        </div>
                    }
                    else
                    {
                        <!-- Trạng thái không có dữ liệu -->
                        <div class="empty-state text-center py-5">
                            <div class="empty-state-icon mb-3">
                                <i class="fas fa-user-friends fa-4x text-muted"></i>
                            </div>
                            <h4 class="empty-state-title">Không tìm thấy nhân chứng nào</h4>
                            <p class="empty-state-text mb-4">
                                Hiện chưa có thông tin nhân chứng nào được báo cáo cho trường hợp này.
                            </p>

                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal xem trước file -->
<div class="modal fade" id="previewModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Xem trước file đính kèm</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body text-center">
                <img id="modalPreviewImage" src="" class="img-fluid" style="max-height: 70vh; display: none;">
                <video id="modalPreviewVideo" controls class="img-fluid" style="max-height: 70vh; display: none;"></video>
                <div id="modalUnsupported" class="alert alert-warning" style="display: none;">
                    <i class="fas fa-exclamation-triangle me-2"></i> Không thể xem trước loại file này
                </div>
            </div>
            <div class="modal-footer">
                <a id="downloadFile" href="#" class="btn btn-primary" download>
                    <i class="fas fa-download me-1"></i> Tải xuống
                </a>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i> Đóng
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal xác nhận xóa -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title"><i class="fas fa-exclamation-circle me-2"></i>Xác nhận xóa</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa nhân chứng này? Thao tác này không thể hoàn tác.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i> Hủy bỏ
                </button>
                <button type="button" class="btn btn-danger" id="confirmDelete">
                    <i class="fas fa-trash me-1"></i> Xóa
                </button>
            </div>
        </div>
    </div>
</div>


@section Styles {
    <style>
        .file-preview {
            width: 60px;
            height: 60px;
            object-fit: cover;
            cursor: pointer;
            transition: transform 0.2s;
            border: 1px solid #dee2e6;
            border-radius: 4px;
        }

            .file-preview:hover {
                transform: scale(1.1);
                box-shadow: 0 0 10px rgba(0,0,0,0.1);
            }

        .empty-state {
            padding: 3rem;
            text-align: center;
            background-color: #f8f9fa;
            border-radius: 8px;
        }

        .empty-state-icon {
            color: #adb5bd;
            font-size: 4rem;
            margin-bottom: 1rem;
        }

        .search-box {
            background-color: #f8f9fa;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .table th {
            white-space: nowrap;
            background-color: #f8f9fa;
            vertical-align: middle;
        }

        .card-header {
            border-bottom: none;
        }

        .btn-group-sm > .btn {
            padding: 0.25rem 0.5rem;
        }
    </style>

    

}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Khởi tạo tooltip
            $('[data-bs-toggle="tooltip"]').tooltip();

            // Xử lý modal xem trước file
            $('#previewModal').on('show.bs.modal', function(event) {
                var button = $(event.relatedTarget);
                var fileUrl = button.data('src');
                var fileExt = fileUrl.split('.').pop().toLowerCase();

                // Ẩn tất cả các phần tử xem trước trước
                $('#modalPreviewImage').hide();
                $('#modalPreviewVideo').hide();
                $('#modalUnsupported').hide();

                // Thiết lập link tải xuống
                $('#downloadFile').attr('href', fileUrl);

                // Hiển thị phần xem trước phù hợp
                if (['jpg', 'jpeg', 'png', 'gif'].includes(fileExt)) {
                    $('#modalPreviewImage').attr('src', fileUrl).show();
                } else if (fileExt === 'mp4') {
                    $('#modalPreviewVideo').attr('src', fileUrl).show()[0].load();
                } else {
                    $('#modalUnsupported').show();
                }
            });

            // Xử lý xác nhận xóa - ĐÃ SỬA
            var deleteId;
            $('.delete-btn').click(function() {
                deleteId = $(this).data('id');
                $('#deleteModal').modal('show');
            });

            $('#confirmDelete').click(function() {
                // Lấy token chống giả mạo
                var token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: '@Url.Action("Delete", "NhanChung")',
                    type: 'POST',
                    data: {
                        id: deleteId,
                        __RequestVerificationToken: token
                    },
                    success: function(response) {
                        $('#deleteModal').modal('hide');
                        if (response.success) {
                            showNotification('success', response.message || 'Đã xóa nhân chứng thành công!');
                            setTimeout(function() {
                                location.reload();
                            }, 1000);
                        } else {
                            showNotification('error', response.message || 'Xóa không thành công!');
                        }
                    },
                    error: function(xhr) {
                        $('#deleteModal').modal('hide');
                        var errorMsg = 'Lỗi hệ thống';
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMsg = xhr.responseJSON.message;
                        }
                        showNotification('error', errorMsg);
                    }
                });
            });

            // Hiển thị thông báo từ TempData
        @if (TempData["SuccessMessage"] != null)
        {
            <text>showNotification('success', '@Html.Raw(TempData["SuccessMessage"])');</text>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <text>showNotification('error', '@Html.Raw(TempData["ErrorMessage"])');</text>
        }
        @if (TempData["WarningMessage"] != null)
        {
            <text>showNotification('warning', '@Html.Raw(TempData["WarningMessage"])');</text>
        }
        @if (TempData["InfoMessage"] != null)
        {
            <text>showNotification('info', '@Html.Raw(TempData["InfoMessage"])');</text>
        }
        });

        function showNotification(type, message) {
            const notificationArea = $('#notification-area');
            const iconMap = {
                success: 'fa-check-circle',
                error: 'fa-times-circle',
                warning: 'fa-exclamation-triangle',
                info: 'fa-info-circle'
            };

            const notification = $(`
                <div class="notification ${type}">
                    <i class="fas ${iconMap[type] || 'fa-info-circle'} me-2"></i>
                    ${message}
                </div>
            `);

            notification.hide().appendTo(notificationArea).slideDown(300);

            // Tự động xóa sau 5 giây
            setTimeout(() => {
                notification.slideUp(300, () => notification.remove());
            }, 5000);

            // Click để đóng
            notification.click(function() {
                $(this).slideUp(300, function() {
                    $(this).remove();
                });
            });

            // Hiệu ứng hover
            notification.hover(
                function() { $(this).css('transform', 'scale(1.02)'); },
                function() { $(this).css('transform', 'scale(1)'); }
            );
        }
    </script>
}